{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function _regeneratorRuntime(){\"use strict\";var r=_regenerator(),e=r.m(_regeneratorRuntime),t=(Object.getPrototypeOf?Object.getPrototypeOf(e):e.__proto__).constructor;function n(r){var e=\"function\"==typeof r&&r.constructor;return!!e&&(e===t||\"GeneratorFunction\"===(e.displayName||e.name));}var o={throw:1,return:2,break:3,continue:3};function a(r){var e,t;return function(n){e||(e={stop:function stop(){return t(n.a,2);},catch:function _catch(){return n.v;},abrupt:function abrupt(r,e){return t(n.a,o[r],e);},delegateYield:function delegateYield(r,o,a){return e.resultName=o,t(n.d,_regeneratorValues(r),a);},finish:function finish(r){return t(n.f,r);}},t=function t(r,_t,o){n.p=e.prev,n.n=e.next;try{return r(_t,o);}finally{e.next=n.n;}}),e.resultName&&(e[e.resultName]=n.v,e.resultName=void 0),e.sent=n.v,e.next=n.n;try{return r.call(this,e);}finally{n.p=e.prev,n.n=e.next;}};}return(_regeneratorRuntime=function _regeneratorRuntime(){return{wrap:function wrap(e,t,n,o){return r.w(a(e),t,n,o&&o.reverse());},isGeneratorFunction:n,mark:r.m,awrap:function awrap(r,e){return new _OverloadYield(r,e);},AsyncIterator:_regeneratorAsyncIterator,async:function async(r,e,t,o,u){return(n(e)?_regeneratorAsyncGen:_regeneratorAsync)(a(r),e,t,o,u);},keys:_regeneratorKeys,values:_regeneratorValues};})();}function _regeneratorValues(e){if(null!=e){var t=e[\"function\"==typeof Symbol&&Symbol.iterator||\"@@iterator\"],r=0;if(t)return t.call(e);if(\"function\"==typeof e.next)return e;if(!isNaN(e.length))return{next:function next(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e};}};}throw new TypeError(typeof e+\" is not iterable\");}function _regeneratorKeys(e){var n=Object(e),r=[];for(var t in n){r.unshift(t);}return function e(){for(;r.length;){if((t=r.pop())in n)return e.value=t,e.done=!1,e;}return e.done=!0,e;};}function _regeneratorAsync(n,e,r,t,o){var a=_regeneratorAsyncGen(n,e,r,t,o);return a.next().then(function(n){return n.done?n.value:a.next();});}function _regeneratorAsyncGen(r,e,t,o,n){return new _regeneratorAsyncIterator(_regenerator().w(r,e,t,o),n||Promise);}function _regeneratorAsyncIterator(t,e){function n(r,o,i,f){try{var c=t[r](o),u=c.value;return u instanceof _OverloadYield?e.resolve(u.v).then(function(t){n(\"next\",t,i,f);},function(t){n(\"throw\",t,i,f);}):e.resolve(u).then(function(t){c.value=t,i(c);},function(t){return n(\"throw\",t,i,f);});}catch(t){f(t);}}var r;this.next||(_regeneratorDefine2(_regeneratorAsyncIterator.prototype),_regeneratorDefine2(_regeneratorAsyncIterator.prototype,\"function\"==typeof Symbol&&Symbol.asyncIterator||\"@asyncIterator\",function(){return this;})),_regeneratorDefine2(this,\"_invoke\",function(t,o,i){function f(){return new e(function(e,r){n(t,i,e,r);});}return r=r?r.then(f,f):f();},!0);}function _regenerator(){var e,t,r=\"function\"==typeof Symbol?Symbol:{},n=r.iterator||\"@@iterator\",o=r.toStringTag||\"@@toStringTag\";function i(r,n,o,i){var c=n&&n.prototype instanceof Generator?n:Generator,u=Object.create(c.prototype);return _regeneratorDefine2(u,\"_invoke\",function(r,n,o){var i,c,u,f=0,p=o||[],y=!1,G={p:0,n:0,v:e,a:d,f:d.bind(e,4),d:function d(t,r){return i=t,c=0,u=e,G.n=r,a;}};function d(r,n){for(c=r,u=n,t=0;!y&&f&&!o&&t<p.length;t++){var o,i=p[t],d=G.p,l=i[2];r>3?(o=l===n)&&(u=i[(c=i[4])?5:(c=3,3)],i[4]=i[5]=e):i[0]<=d&&((o=r<2&&d<i[1])?(c=0,G.v=n,G.n=i[1]):d<l&&(o=r<3||i[0]>n||n>l)&&(i[4]=r,i[5]=n,G.n=l,c=0));}if(o||r>1)return a;throw y=!0,n;}return function(o,p,l){if(f>1)throw TypeError(\"Generator is already running\");for(y&&1===p&&d(p,l),c=p,u=l;(t=c<2?e:u)||!y;){i||(c?c<3?(c>1&&(G.n=-1),d(c,u)):G.n=u:G.v=u);try{if(f=2,i){if(c||(o=\"next\"),t=i[o]){if(!(t=t.call(i,u)))throw TypeError(\"iterator result is not an object\");if(!t.done)return t;u=t.value,c<2&&(c=0);}else 1===c&&(t=i.return)&&t.call(i),c<2&&(u=TypeError(\"The iterator does not provide a '\"+o+\"' method\"),c=1);i=e;}else if((t=(y=G.n<0)?u:r.call(n,G))!==a)break;}catch(t){i=e,c=1,u=t;}finally{f=1;}}return{value:t,done:y};};}(r,o,i),!0),u;}var a={};function Generator(){}function GeneratorFunction(){}function GeneratorFunctionPrototype(){}t=Object.getPrototypeOf;var c=[][n]?t(t([][n]())):(_regeneratorDefine2(t={},n,function(){return this;}),t),u=GeneratorFunctionPrototype.prototype=Generator.prototype=Object.create(c);function f(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,GeneratorFunctionPrototype):(e.__proto__=GeneratorFunctionPrototype,_regeneratorDefine2(e,o,\"GeneratorFunction\")),e.prototype=Object.create(u),e;}return GeneratorFunction.prototype=GeneratorFunctionPrototype,_regeneratorDefine2(u,\"constructor\",GeneratorFunctionPrototype),_regeneratorDefine2(GeneratorFunctionPrototype,\"constructor\",GeneratorFunction),GeneratorFunction.displayName=\"GeneratorFunction\",_regeneratorDefine2(GeneratorFunctionPrototype,o,\"GeneratorFunction\"),_regeneratorDefine2(u),_regeneratorDefine2(u,o,\"Generator\"),_regeneratorDefine2(u,n,function(){return this;}),_regeneratorDefine2(u,\"toString\",function(){return\"[object Generator]\";}),(_regenerator=function _regenerator(){return{w:i,m:f};})();}function _regeneratorDefine2(e,r,n,t){var i=Object.defineProperty;try{i({},\"\",{});}catch(e){i=0;}_regeneratorDefine2=function _regeneratorDefine(e,r,n,t){function o(r,n){_regeneratorDefine2(e,r,function(e){return this._invoke(r,n,e);});}r?i?i(e,r,{value:n,enumerable:!t,configurable:!t,writable:!t}):e[r]=n:(o(\"next\",0),o(\"throw\",1),o(\"return\",2));},_regeneratorDefine2(e,r,n,t);}function _OverloadYield(e,d){this.v=e,this.k=d;}import{useState,useEffect}from\"react\";import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import Utils from\"../common/Utils\";import{Font,ForegroundColor,Sounds}from\"../common/Const\";import Layout from\"../components/Layout\";import Button from\"../components/Button\";import Divider from\"../components/Divider\";import GridItem from\"../components/GridItem\";import GameModeSelector from\"../components/GameModeSelector\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var winArrays=[[0,1,2],[3,4,5],[6,7,8],[0,3,6],[1,4,7],[2,5,8],[0,4,8],[2,4,6]];var GameScreen=function GameScreen(){var _useState=useState(\"Bot\"),_useState2=_slicedToArray(_useState,2),gameWith=_useState2[0],setGameWith=_useState2[1];var _useState3=useState(\"CROSS\"),_useState4=_slicedToArray(_useState3,2),turn=_useState4[0],setTurn=_useState4[1];var _useState5=useState(_toConsumableArray(new Array(9))),_useState6=_slicedToArray(_useState5,2),grids=_useState6[0],setGrids=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),gameState=_useState8[0],setGameState=_useState8[1];var _useState9=useState(undefined),_useState0=_slicedToArray(_useState9,2),winner=_useState0[0],setWinner=_useState0[1];var _useState1=useState([]),_useState10=_slicedToArray(_useState1,2),winningIndexes=_useState10[0],setWinningIndexes=_useState10[1];useEffect(function(){if(grids.includes(\"CROSS\")===false&&grids.includes(\"ZERO\")===false){return;}var didSomeoneWon=checkWinner();if(didSomeoneWon){setGameState(\"Game Over\");}else if(didSomeoneWon===false&&grids.includes(undefined)===false){setGameState(\"Game Draw\");}else{setTurn(turn===\"CROSS\"?\"ZERO\":\"CROSS\");}},[grids]);useEffect(function(){if(turn===\"ZERO\"&&gameWith===\"Bot\"){onBotsTurn();}},[turn]);useEffect(function(){if(gameState===\"Game Over\"){Utils.PlaySound(Sounds.Game_Won);}else if(gameState===\"Game Draw\"){Utils.PlaySound(Sounds.Game_Draw);}},[gameState]);var onBotsTurn=function _callee(){var emptyIndexes,botSelectedIndex;return _regeneratorRuntime().async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _regeneratorRuntime().awrap(Utils.Sleep());case 2:emptyIndexes=[];grids.map(function(grid,index){if(grid===undefined){emptyIndexes.push(index);}});botSelectedIndex=Math.floor(Math.random()*emptyIndexes.length);onGridPress(emptyIndexes[botSelectedIndex],true);case 6:case\"end\":return _context.stop();}}},null,null,null,Promise);};var checkWinner=function checkWinner(){var winningIndexArray=winArrays.filter(function(winArr){var _winArr=_slicedToArray(winArr,3),first=_winArr[0],second=_winArr[1],third=_winArr[2];if(grids[first]!==undefined&&grids[first]===grids[second]&&grids[second]===grids[third]){return winArr;}});if(winningIndexArray.length>0){var _winningIndexArray=_slicedToArray(winningIndexArray,1),firstWinArray=_winningIndexArray[0];var _winner=grids[firstWinArray[0]];setWinner(_winner);setWinningIndexes(winningIndexArray);return true;}return false;};var onGridPress=function onGridPress(index,byBot){var canGameContinue=gameState.length===0;var isValidTurn=true;if(gameWith===\"Bot\"&&turn===\"ZERO\"&&!byBot){isValidTurn=false;}if(canGameContinue&&isValidTurn&&grids[index]===undefined){var newGrids=_toConsumableArray(grids);newGrids[index]=turn;setGrids(_toConsumableArray(newGrids));Utils.PlaySound(Sounds.Move_Sound);}};var onReset=function onReset(){setTurn(\"CROSS\");setGrids(_toConsumableArray(new Array(9)));setGameState(\"\");setWinner(undefined);setWinningIndexes([]);};var isGameStarted=function isGameStarted(){return grids.filter(function(v){return v!==undefined;}).length!==0;};var getTurnLabelText=function getTurnLabelText(){var emoji=\"\",text=\"\";if(gameState===\"\"){if(turn===\"CROSS\"){if(gameWith===\"Bot\"){text=\"Your Turn\";}else{text=\"X's Turn\";}}else{if(gameWith===\"Bot\"){text=\"Bot's Turn\";}else{text=\"O's Turn\";}}}else if(gameState===\"Game Over\"){emoji=\"‚≠ê\";if(winner===\"CROSS\"){if(gameWith===\"Bot\"){text=\" You Won \";}else{text=\" X Won \";}}else{if(gameWith===\"Bot\"){text=\" Bot Won \";}else{text=\" O Won \";}}}else{emoji=\"üòë\";text=\" Draw \";}return\"\"+emoji+text+emoji;};var isInWinIndex=function isInWinIndex(index){var winIn=winningIndexes.flat();return winIn.includes(index);};return _jsxs(Layout,{style:{justifyContent:\"center\"},children:[_jsxs(View,{children:[_jsx(Text,{style:{fontFamily:Font.FontName,fontSize:26,color:ForegroundColor,textAlign:\"center\"},children:\"Opponent\"}),_jsxs(View,{style:{flexDirection:\"row\",alignItems:\"center\"},children:[_jsx(GameModeSelector,{title:\"Friend\",onPress:function onPress(){return setGameWith(\"Player\");},isSelected:gameWith===\"Player\",disabled:isGameStarted()}),_jsx(GameModeSelector,{title:\"Bot\",onPress:function onPress(){return setGameWith(\"Bot\");},isSelected:gameWith===\"Bot\",disabled:isGameStarted()})]}),_jsx(Divider,{})]}),_jsx(Text,{style:{fontFamily:Font.FontName,fontSize:40,color:ForegroundColor,textAlign:\"center\"},children:getTurnLabelText()}),_jsx(View,{style:{marginVertical:12,justifyContent:\"center\",alignItems:\"center\"},children:_jsx(View,{style:{width:300,height:300,backgroundColor:\"#2369EE\",borderRadius:6},children:[[0,1,2],[3,4,5],[6,7,8]].map(function(_ref,i){var _ref2=_slicedToArray(_ref,3),ind1=_ref2[0],ind2=_ref2[1],ind3=_ref2[2];return _jsxs(View,{style:{flexDirection:\"row\"},children:[_jsx(GridItem,{index:ind1,onPress:onGridPress,state:grids[ind1],isWinningIndex:isInWinIndex(ind1)}),_jsx(GridItem,{index:ind2,onPress:onGridPress,state:grids[ind2],isWinningIndex:isInWinIndex(ind2)}),_jsx(GridItem,{index:ind3,onPress:onGridPress,state:grids[ind3],isWinningIndex:isInWinIndex(ind3)})]},\"\"+i);})})}),_jsx(Divider,{}),_jsx(View,{style:{flexDirection:\"row\"},children:_jsx(Button,{title:\"Reset\",onPress:onReset})})]});};export default GameScreen;","map":{"version":3,"names":["useState","useEffect","View","Text","Utils","Font","ForegroundColor","Sounds","Layout","Button","Divider","GridItem","GameModeSelector","jsx","_jsx","jsxs","_jsxs","winArrays","GameScreen","_useState","_useState2","_slicedToArray","gameWith","setGameWith","_useState3","_useState4","turn","setTurn","_useState5","_toConsumableArray","Array","_useState6","grids","setGrids","_useState7","_useState8","gameState","setGameState","_useState9","undefined","_useState0","winner","setWinner","_useState1","_useState10","winningIndexes","setWinningIndexes","includes","didSomeoneWon","checkWinner","onBotsTurn","PlaySound","Game_Won","Game_Draw","_callee","emptyIndexes","botSelectedIndex","_regeneratorRuntime","async","_callee$","_context","prev","next","awrap","Sleep","map","grid","index","push","Math","floor","random","length","onGridPress","stop","Promise","winningIndexArray","filter","winArr","_winArr","first","second","third","_winningIndexArray","firstWinArray","byBot","canGameContinue","isValidTurn","newGrids","Move_Sound","onReset","isGameStarted","v","getTurnLabelText","emoji","text","isInWinIndex","winIn","flat","style","justifyContent","children","fontFamily","FontName","fontSize","color","textAlign","flexDirection","alignItems","title","onPress","isSelected","disabled","marginVertical","width","height","backgroundColor","borderRadius","_ref","i","_ref2","ind1","ind2","ind3","state","isWinningIndex"],"sources":["E:/Projects/IN_BUILD/TicTacToe/src/screens/GameScreen.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { View, Text } from \"react-native\";\n\nimport Utils from \"../common/Utils\";\nimport { Font, ForegroundColor, Sounds } from \"../common/Const\";\n\nimport Layout from \"../components/Layout\";\nimport Button from \"../components/Button\";\nimport Divider from \"../components/Divider\";\nimport GridItem from \"../components/GridItem\";\nimport GameModeSelector from \"../components/GameModeSelector\";\n\nconst winArrays = [\n  [0, 1, 2],\n  [3, 4, 5],\n  [6, 7, 8],\n\n  [0, 3, 6],\n  [1, 4, 7],\n  [2, 5, 8],\n\n  [0, 4, 8],\n  [2, 4, 6],\n];\n\nconst GameScreen: React.FC = () => {\n  const [gameWith, setGameWith] = useState<\"Bot\" | \"Player\">(\"Bot\");\n\n  const [turn, setTurn] = useState<\"CROSS\" | \"ZERO\">(\"CROSS\");\n  const [grids, setGrids] = useState<Array<\"CROSS\" | \"ZERO\" | undefined>>([\n    ...new Array(9),\n  ]);\n  const [gameState, setGameState] = useState<\"Game Over\" | \"Game Draw\" | \"\">(\n    \"\"\n  );\n  const [winner, setWinner] = useState<\"CROSS\" | \"ZERO\" | undefined>(undefined);\n  const [winningIndexes, setWinningIndexes] = useState<Array<Array<number>>>(\n    []\n  );\n\n  useEffect(() => {\n    if (grids.includes(\"CROSS\") === false && grids.includes(\"ZERO\") === false) {\n      return;\n    }\n\n    const didSomeoneWon = checkWinner();\n    if (didSomeoneWon) {\n      setGameState(\"Game Over\");\n    } else if (didSomeoneWon === false && grids.includes(undefined) === false) {\n      setGameState(\"Game Draw\");\n    } else {\n      setTurn(turn === \"CROSS\" ? \"ZERO\" : \"CROSS\");\n    }\n  }, [grids]);\n\n  useEffect(() => {\n    //CHECK IF PLAYING AGAINTS BOT\n    if (turn === \"ZERO\" && gameWith === \"Bot\") {\n      onBotsTurn();\n    }\n  }, [turn]);\n\n  useEffect(() => {\n    if (gameState === \"Game Over\") {\n      Utils.PlaySound(Sounds.Game_Won);\n    } else if (gameState === \"Game Draw\") {\n      Utils.PlaySound(Sounds.Game_Draw);\n    }\n  }, [gameState]);\n\n  const onBotsTurn = async () => {\n    await Utils.Sleep();\n    //TAKE TURN AUTOMATICALLY\n    let emptyIndexes: number[] = [];\n    grids.map((grid, index) => {\n      if (grid === undefined) {\n        emptyIndexes.push(index);\n      }\n    });\n\n    const botSelectedIndex = Math.floor(Math.random() * emptyIndexes.length);\n    onGridPress(emptyIndexes[botSelectedIndex], true);\n  };\n\n  const checkWinner = (): boolean => {\n    const winningIndexArray = winArrays.filter((winArr) => {\n      const [first, second, third] = winArr;\n      if (\n        grids[first] !== undefined &&\n        grids[first] === grids[second] &&\n        grids[second] === grids[third]\n      ) {\n        return winArr;\n      }\n    });\n\n    if (winningIndexArray.length > 0) {\n      const [firstWinArray] = winningIndexArray;\n      const winner = grids[firstWinArray[0]];\n      setWinner(winner);\n      setWinningIndexes(winningIndexArray);\n      return true;\n    }\n    return false;\n  };\n\n  const onGridPress = (index: number, byBot?: boolean) => {\n    const canGameContinue = gameState.length === 0;\n    let isValidTurn = true;\n    if (gameWith === \"Bot\" && turn === \"ZERO\" && !byBot) {\n      isValidTurn = false;\n    }\n\n    if (canGameContinue && isValidTurn && grids[index] === undefined) {\n      let newGrids = [...grids];\n      newGrids[index] = turn;\n      setGrids([...newGrids]);\n      Utils.PlaySound(Sounds.Move_Sound);\n    }\n  };\n\n  const onReset = () => {\n    setTurn(\"CROSS\");\n    setGrids([...new Array(9)]);\n    setGameState(\"\");\n    setWinner(undefined);\n    setWinningIndexes([]);\n  };\n\n  const isGameStarted = (): boolean => {\n    return grids.filter((v) => v !== undefined).length !== 0;\n  };\n\n  const getTurnLabelText = (): string => {\n    let emoji = \"\",\n      text = \"\";\n    if (gameState === \"\") {\n      if (turn === \"CROSS\") {\n        if (gameWith === \"Bot\") {\n          text = \"Your Turn\";\n        } else {\n          text = \"X's Turn\";\n        }\n      } else {\n        if (gameWith === \"Bot\") {\n          text = \"Bot's Turn\";\n        } else {\n          text = \"O's Turn\";\n        }\n      }\n    } else if (gameState === \"Game Over\") {\n      emoji = \"‚≠ê\";\n      if (winner === \"CROSS\") {\n        if (gameWith === \"Bot\") {\n          text = \" You Won \";\n        } else {\n          text = \" X Won \";\n        }\n      } else {\n        if (gameWith === \"Bot\") {\n          text = \" Bot Won \";\n        } else {\n          text = \" O Won \";\n        }\n      }\n    } else {\n      emoji = \"üòë\";\n      text = \" Draw \";\n    }\n    return `${emoji}${text}${emoji}`;\n  };\n\n  const isInWinIndex = (index: number): boolean => {\n    const winIn = winningIndexes.flat();\n    return winIn.includes(index);\n  };\n\n  return (\n    <Layout style={{ justifyContent: \"center\" }}>\n      <View>\n        <Text\n          style={{\n            fontFamily: Font.FontName,\n            fontSize: 26,\n            color: ForegroundColor,\n            textAlign: \"center\",\n          }}\n        >\n          Opponent\n        </Text>\n        <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n          <GameModeSelector\n            title=\"Friend\"\n            onPress={() => setGameWith(\"Player\")}\n            isSelected={gameWith === \"Player\"}\n            disabled={isGameStarted()}\n          />\n          <GameModeSelector\n            title=\"Bot\"\n            onPress={() => setGameWith(\"Bot\")}\n            isSelected={gameWith === \"Bot\"}\n            disabled={isGameStarted()}\n          />\n        </View>\n        <Divider />\n      </View>\n      <Text\n        style={{\n          fontFamily: Font.FontName,\n          fontSize: 40,\n          color: ForegroundColor,\n          textAlign: \"center\",\n        }}\n      >\n        {getTurnLabelText()}\n      </Text>\n      <View\n        style={{\n          marginVertical: 12,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <View\n          style={{\n            width: 300,\n            height: 300,\n            backgroundColor: \"#2369EE\",\n            borderRadius: 6,\n          }}\n        >\n          {[\n            [0, 1, 2],\n            [3, 4, 5],\n            [6, 7, 8],\n          ].map(([ind1, ind2, ind3], i) => (\n            <View style={{ flexDirection: \"row\" }} key={`${i}`}>\n              <GridItem\n                index={ind1}\n                onPress={onGridPress}\n                state={grids[ind1]}\n                isWinningIndex={isInWinIndex(ind1)}\n              />\n              <GridItem\n                index={ind2}\n                onPress={onGridPress}\n                state={grids[ind2]}\n                isWinningIndex={isInWinIndex(ind2)}\n              />\n              <GridItem\n                index={ind3}\n                onPress={onGridPress}\n                state={grids[ind3]}\n                isWinningIndex={isInWinIndex(ind3)}\n              />\n            </View>\n          ))}\n        </View>\n      </View>\n      <Divider />\n      <View style={{ flexDirection: \"row\" }}>\n        <Button title={\"Reset\"} onPress={onReset} />\n      </View>\n    </Layout>\n  );\n};\n\nexport default GameScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}