{"ast":null,"code":"import ExponentAV from\"./ExponentAV\";export var PitchCorrectionQuality;(function(PitchCorrectionQuality){PitchCorrectionQuality[PitchCorrectionQuality[\"Low\"]=ExponentAV&&ExponentAV.Qualities&&ExponentAV.Qualities.Low]=\"Low\";PitchCorrectionQuality[PitchCorrectionQuality[\"Medium\"]=ExponentAV&&ExponentAV.Qualities&&ExponentAV.Qualities.Medium]=\"Medium\";PitchCorrectionQuality[PitchCorrectionQuality[\"High\"]=ExponentAV&&ExponentAV.Qualities&&ExponentAV.Qualities.High]=\"High\";})(PitchCorrectionQuality||(PitchCorrectionQuality={}));","map":{"version":3,"names":["ExponentAV","PitchCorrectionQuality","Qualities","Low","Medium","High"],"sources":["E:\\Projects\\IN_BUILD\\TicTacToe\\node_modules\\expo-av\\src\\AV.types.ts"],"sourcesContent":["import { Asset } from 'expo-asset';\n\nimport ExponentAV from './ExponentAV';\n\nexport enum PitchCorrectionQuality {\n  Low = ExponentAV && ExponentAV.Qualities && ExponentAV.Qualities.Low,\n  Medium = ExponentAV && ExponentAV.Qualities && ExponentAV.Qualities.Medium,\n  High = ExponentAV && ExponentAV.Qualities && ExponentAV.Qualities.High,\n}\n\nexport type AVPlaybackSource = number | AVPlaybackSourceObject | Asset;\n\nexport type AVPlaybackSourceObject = {\n  uri: string;\n  overrideFileExtensionAndroid?: string;\n  headers?: { [fieldName: string]: string };\n};\n\nexport type AVPlaybackNativeSource = {\n  uri: string;\n  overridingExtension?: string | null;\n  headers?: { [fieldName: string]: string };\n};\n\nexport type AVMetadata = {\n  title?: string;\n};\n\nexport type AVPlaybackStatus = AVPlaybackStatusError | AVPlaybackStatusSuccess;\n\nexport type AVPlaybackStatusError = {\n  isLoaded: false;\n  androidImplementation?: string;\n  error?: string; // populated exactly once when an error forces the object to unload\n};\n\nexport type AVPlaybackStatusSuccess = {\n  isLoaded: true;\n  androidImplementation?: string;\n\n  uri: string;\n\n  progressUpdateIntervalMillis: number;\n  durationMillis?: number;\n  positionMillis: number;\n  playableDurationMillis?: number;\n  seekMillisToleranceBefore?: number;\n  seekMillisToleranceAfter?: number;\n\n  shouldPlay: boolean;\n  isPlaying: boolean;\n  isBuffering: boolean;\n\n  rate: number;\n  shouldCorrectPitch: boolean;\n  volume: number;\n  isMuted: boolean;\n  isLooping: boolean;\n\n  didJustFinish: boolean; // true exactly once when the track plays to finish\n};\n\nexport type AVPlaybackStatusToSet = {\n  androidImplementation?: string;\n  progressUpdateIntervalMillis?: number;\n  positionMillis?: number;\n  seekMillisToleranceBefore?: number;\n  seekMillisToleranceAfter?: number;\n  shouldPlay?: boolean;\n  rate?: number;\n  shouldCorrectPitch?: boolean;\n  volume?: number;\n  isMuted?: boolean;\n  isLooping?: boolean;\n  pitchCorrectionQuality?: PitchCorrectionQuality;\n};\n\nexport type AVPlaybackTolerance = { toleranceMillisBefore?: number; toleranceMillisAfter?: number };\n"],"mappings":"AAEA,MAAO,CAAAA,UAAU,oBAEjB,UAAY,CAAAC,sBAIX,CAJD,UAAYA,sBAAsB,EAChCA,sBAAA,CAAAA,sBAAA,QAAMD,UAAU,EAAIA,UAAU,CAACE,SAAS,EAAIF,UAAU,CAACE,SAAS,CAACC,GAAG,QACpEF,sBAAA,CAAAA,sBAAA,WAASD,UAAU,EAAIA,UAAU,CAACE,SAAS,EAAIF,UAAU,CAACE,SAAS,CAACE,MAAM,WAC1EH,sBAAA,CAAAA,sBAAA,SAAOD,UAAU,EAAIA,UAAU,CAACE,SAAS,EAAIF,UAAU,CAACE,SAAS,CAACG,IAAI,SACxE,CAAC,EAJWJ,sBAAsB,GAAtBA,sBAAsB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}