{"ast":null,"code":"import{getFilename}from\"./AssetUris\";export function isImageType(type){return /^(jpeg|jpg|gif|png|bmp|webp|heic)$/i.test(type);}export function getImageInfoAsync(url){return new Promise(function(resolve,reject){var img=new Image();img.onerror=reject;img.onload=function(){resolve({name:getFilename(url),width:img.naturalWidth,height:img.naturalHeight});};img.src=url;});}","map":{"version":3,"names":["getFilename","isImageType","type","test","getImageInfoAsync","url","Promise","resolve","reject","img","Image","onerror","onload","name","width","naturalWidth","height","naturalHeight","src"],"sources":["E:\\Projects\\IN_BUILD\\TicTacToe\\node_modules\\expo-asset\\src\\ImageAssets.ts"],"sourcesContent":["/* eslint-env browser */\nimport { getFilename } from './AssetUris';\n\ntype ImageInfo = {\n  name: string;\n  width: number;\n  height: number;\n};\n\nexport function isImageType(type: string): boolean {\n  return /^(jpeg|jpg|gif|png|bmp|webp|heic)$/i.test(type);\n}\n\nexport function getImageInfoAsync(url: string): Promise<ImageInfo> {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    img.onerror = reject;\n    img.onload = () => {\n      resolve({\n        name: getFilename(url),\n        width: img.naturalWidth,\n        height: img.naturalHeight,\n      });\n    };\n    img.src = url;\n  });\n}\n"],"mappings":"AACA,OAASA,WAAW,mBAQpB,MAAM,SAAU,CAAAC,WAAWA,CAACC,IAAY,EACtC,MAAO,sCAAqC,CAACC,IAAI,CAACD,IAAI,CAAC,CACzD,CAEA,MAAM,SAAU,CAAAE,iBAAiBA,CAACC,GAAW,EAC3C,MAAO,IAAI,CAAAC,OAAO,CAAC,SAACC,OAAO,CAAEC,MAAM,CAAI,CACrC,GAAM,CAAAC,GAAG,CAAG,GAAI,CAAAC,KAAK,EAAE,CACvBD,GAAG,CAACE,OAAO,CAAGH,MAAM,CACpBC,GAAG,CAACG,MAAM,CAAG,UAAK,CAChBL,OAAO,CAAC,CACNM,IAAI,CAAEb,WAAW,CAACK,GAAG,CAAC,CACtBS,KAAK,CAAEL,GAAG,CAACM,YAAY,CACvBC,MAAM,CAAEP,GAAG,CAACQ,a,CACb,CAAC,CACJ,CAAC,CACDR,GAAG,CAACS,GAAG,CAAGb,GAAG,CACf,CAAC,CAAC,CACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}