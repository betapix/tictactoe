{"ast":null,"code":"import NativeModules from\"react-native-web/dist/exports/NativeModules\";import{getAssetByID}from\"./AssetRegistry\";import AssetSourceResolver from\"./AssetSourceResolver\";var _customSourceTransformer;var _serverURL;var _sourceCodeScriptURL;function getSourceCodeScriptURL(){var _sourceCode;if(_sourceCodeScriptURL){return _sourceCodeScriptURL;}var sourceCode=typeof nativeExtensions!=='undefined'?nativeExtensions.SourceCode:null;if(!sourceCode){sourceCode=NativeModules==null?void 0:NativeModules.SourceCode;}_sourceCodeScriptURL=(_sourceCode=sourceCode)==null?void 0:_sourceCode.scriptURL;return _sourceCodeScriptURL;}function getDevServerURL(){if(_serverURL===undefined){var sourceCodeScriptURL=getSourceCodeScriptURL();var match=sourceCodeScriptURL&&sourceCodeScriptURL.match(/^https?:\\/\\/.*?\\//);if(match){_serverURL=match[0];}else{_serverURL=null;}}return _serverURL;}export function setCustomSourceTransformer(transformer){_customSourceTransformer=transformer;}export default function resolveAssetSource(source){if(typeof source==='object'){return source;}var asset=getAssetByID(source);if(!asset){return undefined;}var resolver=new AssetSourceResolver(getDevServerURL(),null,asset);if(_customSourceTransformer){return _customSourceTransformer(resolver);}return resolver.defaultAsset();}Object.defineProperty(resolveAssetSource,'setCustomSourceTransformer',{get:function get(){return setCustomSourceTransformer;}});var pickScale=AssetSourceResolver.pickScale;export{pickScale};","map":{"version":3,"names":["getAssetByID","AssetSourceResolver","_customSourceTransformer","_serverURL","_sourceCodeScriptURL","getSourceCodeScriptURL","_sourceCode","sourceCode","nativeExtensions","SourceCode","NativeModules","scriptURL","getDevServerURL","undefined","sourceCodeScriptURL","match","setCustomSourceTransformer","transformer","resolveAssetSource","source","asset","resolver","defaultAsset","Object","defineProperty","get","pickScale"],"sources":["E:\\Projects\\IN_BUILD\\TicTacToe\\node_modules\\expo-asset\\src\\resolveAssetSource.web.ts"],"sourcesContent":["import { NativeModules } from 'react-native';\n\nimport { getAssetByID } from './AssetRegistry';\nimport AssetSourceResolver, { ResolvedAssetSource } from './AssetSourceResolver';\n\ndeclare let nativeExtensions: { SourceCode?: { scriptURL: string } } | undefined;\n\nlet _customSourceTransformer;\nlet _serverURL: string | undefined | null;\nlet _sourceCodeScriptURL: string | undefined | null;\n\nfunction getSourceCodeScriptURL(): string | undefined | null {\n  if (_sourceCodeScriptURL) {\n    return _sourceCodeScriptURL;\n  }\n\n  let sourceCode = typeof nativeExtensions !== 'undefined' ? nativeExtensions.SourceCode : null;\n  if (!sourceCode) {\n    sourceCode = NativeModules?.SourceCode;\n  }\n  _sourceCodeScriptURL = sourceCode?.scriptURL;\n  return _sourceCodeScriptURL;\n}\n\nfunction getDevServerURL(): string | null {\n  if (_serverURL === undefined) {\n    const sourceCodeScriptURL = getSourceCodeScriptURL();\n    const match = sourceCodeScriptURL && sourceCodeScriptURL.match(/^https?:\\/\\/.*?\\//);\n    if (match) {\n      // jsBundle was loaded from network\n      _serverURL = match[0];\n    } else {\n      // jsBundle was loaded from file\n      _serverURL = null;\n    }\n  }\n  return _serverURL;\n}\n\nexport function setCustomSourceTransformer(\n  transformer: (resolver: AssetSourceResolver) => ResolvedAssetSource\n): void {\n  _customSourceTransformer = transformer;\n}\n\n/**\n * `source` is either a number (opaque type returned by require('./foo.png'))\n * or an `ImageSource` like { uri: '<http location || file path>' }\n */\nexport default function resolveAssetSource(source: any): ResolvedAssetSource | undefined {\n  if (typeof source === 'object') {\n    return source;\n  }\n\n  const asset = getAssetByID(source);\n  if (!asset) {\n    return undefined;\n  }\n\n  const resolver = new AssetSourceResolver(getDevServerURL(), null, asset);\n  if (_customSourceTransformer) {\n    return _customSourceTransformer(resolver);\n  }\n  return resolver.defaultAsset();\n}\n\nObject.defineProperty(resolveAssetSource, 'setCustomSourceTransformer', {\n  get() {\n    return setCustomSourceTransformer;\n  },\n});\n\nexport const { pickScale } = AssetSourceResolver;\n"],"mappings":"uEAEA,OAASA,YAAY,uBACrB,MAAO,CAAAC,mBAA4C,6BAInD,GAAI,CAAAC,wBAAwB,CAC5B,GAAI,CAAAC,UAAqC,CACzC,GAAI,CAAAC,oBAA+C,CAEnD,QAAS,CAAAC,sBAAsBA,CAAA,MAAAC,WAAA,CAC7B,GAAIF,oBAAoB,CAAE,CACxB,MAAO,CAAAA,oBAAoB,C,CAG7B,GAAI,CAAAG,UAAU,CAAG,MAAO,CAAAC,gBAAgB,GAAK,WAAW,CAAGA,gBAAgB,CAACC,UAAU,CAAG,IAAI,CAC7F,GAAI,CAACF,UAAU,CAAE,CACfA,UAAU,CAAGG,aAAa,cAAbA,aAAa,CAAED,UAAU,C,CAExCL,oBAAoB,EAAAE,WAAA,CAAGC,UAAU,eAAVD,WAAA,CAAYK,SAAS,CAC5C,MAAO,CAAAP,oBAAoB,CAC7B,CAEA,QAAS,CAAAQ,eAAeA,CAAA,EACtB,GAAIT,UAAU,GAAKU,SAAS,CAAE,CAC5B,GAAM,CAAAC,mBAAmB,CAAGT,sBAAsB,EAAE,CACpD,GAAM,CAAAU,KAAK,CAAGD,mBAAmB,EAAIA,mBAAmB,CAACC,KAAK,CAAC,mBAAmB,CAAC,CACnF,GAAIA,KAAK,CAAE,CAETZ,UAAU,CAAGY,KAAK,CAAC,CAAC,CAAC,C,CACtB,IAAM,CAELZ,UAAU,CAAG,IAAI,C,EAGrB,MAAO,CAAAA,UAAU,CACnB,CAEA,MAAM,SAAU,CAAAa,0BAA0BA,CACxCC,WAAmE,EAEnEf,wBAAwB,CAAGe,WAAW,CACxC,CAMA,cAAc,SAAU,CAAAC,kBAAkBA,CAACC,MAAW,EACpD,GAAI,MAAO,CAAAA,MAAM,GAAK,QAAQ,CAAE,CAC9B,MAAO,CAAAA,MAAM,C,CAGf,GAAM,CAAAC,KAAK,CAAGpB,YAAY,CAACmB,MAAM,CAAC,CAClC,GAAI,CAACC,KAAK,CAAE,CACV,MAAO,CAAAP,SAAS,C,CAGlB,GAAM,CAAAQ,QAAQ,CAAG,GAAI,CAAApB,mBAAmB,CAACW,eAAe,EAAE,CAAE,IAAI,CAAEQ,KAAK,CAAC,CACxE,GAAIlB,wBAAwB,CAAE,CAC5B,MAAO,CAAAA,wBAAwB,CAACmB,QAAQ,CAAC,C,CAE3C,MAAO,CAAAA,QAAQ,CAACC,YAAY,EAAE,CAChC,CAEAC,MAAM,CAACC,cAAc,CAACN,kBAAkB,CAAE,4BAA4B,CAAE,CACtEO,GAAG,UAAAA,IAAA,EACD,MAAO,CAAAT,0BAA0B,CACnC,C,CACD,CAAC,CAEK,GAAQ,CAAAU,SAAS,CAAKzB,mBAAmB,CAAjCyB,SAAS,CAAyB,OAAAA,SAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}