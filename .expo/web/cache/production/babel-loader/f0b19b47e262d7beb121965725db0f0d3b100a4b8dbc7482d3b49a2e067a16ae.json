{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}function _regeneratorRuntime(){\"use strict\";var r=_regenerator(),e=r.m(_regeneratorRuntime),t=(Object.getPrototypeOf?Object.getPrototypeOf(e):e.__proto__).constructor;function n(r){var e=\"function\"==typeof r&&r.constructor;return!!e&&(e===t||\"GeneratorFunction\"===(e.displayName||e.name));}var o={throw:1,return:2,break:3,continue:3};function a(r){var e,t;return function(n){e||(e={stop:function stop(){return t(n.a,2);},catch:function _catch(){return n.v;},abrupt:function abrupt(r,e){return t(n.a,o[r],e);},delegateYield:function delegateYield(r,o,a){return e.resultName=o,t(n.d,_regeneratorValues(r),a);},finish:function finish(r){return t(n.f,r);}},t=function t(r,_t,o){n.p=e.prev,n.n=e.next;try{return r(_t,o);}finally{e.next=n.n;}}),e.resultName&&(e[e.resultName]=n.v,e.resultName=void 0),e.sent=n.v,e.next=n.n;try{return r.call(this,e);}finally{n.p=e.prev,n.n=e.next;}};}return(_regeneratorRuntime=function _regeneratorRuntime(){return{wrap:function wrap(e,t,n,o){return r.w(a(e),t,n,o&&o.reverse());},isGeneratorFunction:n,mark:r.m,awrap:function awrap(r,e){return new _OverloadYield(r,e);},AsyncIterator:_regeneratorAsyncIterator,async:function async(r,e,t,o,u){return(n(e)?_regeneratorAsyncGen:_regeneratorAsync)(a(r),e,t,o,u);},keys:_regeneratorKeys,values:_regeneratorValues};})();}function _regeneratorValues(e){if(null!=e){var t=e[\"function\"==typeof Symbol&&Symbol.iterator||\"@@iterator\"],r=0;if(t)return t.call(e);if(\"function\"==typeof e.next)return e;if(!isNaN(e.length))return{next:function next(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e};}};}throw new TypeError(typeof e+\" is not iterable\");}function _regeneratorKeys(e){var n=Object(e),r=[];for(var t in n){r.unshift(t);}return function e(){for(;r.length;){if((t=r.pop())in n)return e.value=t,e.done=!1,e;}return e.done=!0,e;};}function _regeneratorAsync(n,e,r,t,o){var a=_regeneratorAsyncGen(n,e,r,t,o);return a.next().then(function(n){return n.done?n.value:a.next();});}function _regeneratorAsyncGen(r,e,t,o,n){return new _regeneratorAsyncIterator(_regenerator().w(r,e,t,o),n||Promise);}function _regeneratorAsyncIterator(t,e){function n(r,o,i,f){try{var c=t[r](o),u=c.value;return u instanceof _OverloadYield?e.resolve(u.v).then(function(t){n(\"next\",t,i,f);},function(t){n(\"throw\",t,i,f);}):e.resolve(u).then(function(t){c.value=t,i(c);},function(t){return n(\"throw\",t,i,f);});}catch(t){f(t);}}var r;this.next||(_regeneratorDefine2(_regeneratorAsyncIterator.prototype),_regeneratorDefine2(_regeneratorAsyncIterator.prototype,\"function\"==typeof Symbol&&Symbol.asyncIterator||\"@asyncIterator\",function(){return this;})),_regeneratorDefine2(this,\"_invoke\",function(t,o,i){function f(){return new e(function(e,r){n(t,i,e,r);});}return r=r?r.then(f,f):f();},!0);}function _regenerator(){var e,t,r=\"function\"==typeof Symbol?Symbol:{},n=r.iterator||\"@@iterator\",o=r.toStringTag||\"@@toStringTag\";function i(r,n,o,i){var c=n&&n.prototype instanceof Generator?n:Generator,u=Object.create(c.prototype);return _regeneratorDefine2(u,\"_invoke\",function(r,n,o){var i,c,u,f=0,p=o||[],y=!1,G={p:0,n:0,v:e,a:d,f:d.bind(e,4),d:function d(t,r){return i=t,c=0,u=e,G.n=r,a;}};function d(r,n){for(c=r,u=n,t=0;!y&&f&&!o&&t<p.length;t++){var o,i=p[t],d=G.p,l=i[2];r>3?(o=l===n)&&(u=i[(c=i[4])?5:(c=3,3)],i[4]=i[5]=e):i[0]<=d&&((o=r<2&&d<i[1])?(c=0,G.v=n,G.n=i[1]):d<l&&(o=r<3||i[0]>n||n>l)&&(i[4]=r,i[5]=n,G.n=l,c=0));}if(o||r>1)return a;throw y=!0,n;}return function(o,p,l){if(f>1)throw TypeError(\"Generator is already running\");for(y&&1===p&&d(p,l),c=p,u=l;(t=c<2?e:u)||!y;){i||(c?c<3?(c>1&&(G.n=-1),d(c,u)):G.n=u:G.v=u);try{if(f=2,i){if(c||(o=\"next\"),t=i[o]){if(!(t=t.call(i,u)))throw TypeError(\"iterator result is not an object\");if(!t.done)return t;u=t.value,c<2&&(c=0);}else 1===c&&(t=i.return)&&t.call(i),c<2&&(u=TypeError(\"The iterator does not provide a '\"+o+\"' method\"),c=1);i=e;}else if((t=(y=G.n<0)?u:r.call(n,G))!==a)break;}catch(t){i=e,c=1,u=t;}finally{f=1;}}return{value:t,done:y};};}(r,o,i),!0),u;}var a={};function Generator(){}function GeneratorFunction(){}function GeneratorFunctionPrototype(){}t=Object.getPrototypeOf;var c=[][n]?t(t([][n]())):(_regeneratorDefine2(t={},n,function(){return this;}),t),u=GeneratorFunctionPrototype.prototype=Generator.prototype=Object.create(c);function f(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,GeneratorFunctionPrototype):(e.__proto__=GeneratorFunctionPrototype,_regeneratorDefine2(e,o,\"GeneratorFunction\")),e.prototype=Object.create(u),e;}return GeneratorFunction.prototype=GeneratorFunctionPrototype,_regeneratorDefine2(u,\"constructor\",GeneratorFunctionPrototype),_regeneratorDefine2(GeneratorFunctionPrototype,\"constructor\",GeneratorFunction),GeneratorFunction.displayName=\"GeneratorFunction\",_regeneratorDefine2(GeneratorFunctionPrototype,o,\"GeneratorFunction\"),_regeneratorDefine2(u),_regeneratorDefine2(u,o,\"Generator\"),_regeneratorDefine2(u,n,function(){return this;}),_regeneratorDefine2(u,\"toString\",function(){return\"[object Generator]\";}),(_regenerator=function _regenerator(){return{w:i,m:f};})();}function _regeneratorDefine2(e,r,n,t){var i=Object.defineProperty;try{i({},\"\",{});}catch(e){i=0;}_regeneratorDefine2=function _regeneratorDefine(e,r,n,t){function o(r,n){_regeneratorDefine2(e,r,function(e){return this._invoke(r,n,e);});}r?i?i(e,r,{value:n,enumerable:!t,configurable:!t,writable:!t}):e[r]=n:(o(\"next\",0),o(\"throw\",1),o(\"return\",2));},_regeneratorDefine2(e,r,n,t);}function _OverloadYield(e,d){this.v=e,this.k=d;}import{PermissionStatus,createPermissionHook,EventEmitter,Platform}from'expo-modules-core';import{_DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS}from\"../AV\";import ExponentAV from\"../ExponentAV\";import{isAudioEnabled,throwIfAudioIsDisabled}from\"./AudioAvailability\";import{RECORDING_OPTIONS_PRESET_LOW_QUALITY}from\"./RecordingConstants\";import{Sound}from\"./Sound\";var _recorderExists=false;var eventEmitter=Platform.OS==='android'?new EventEmitter(ExponentAV):null;export function getPermissionsAsync(){return _regeneratorRuntime().async(function getPermissionsAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:return _context.abrupt(\"return\",ExponentAV.getPermissionsAsync());case 1:case\"end\":return _context.stop();}}},null,null,null,Promise);}export function requestPermissionsAsync(){return _regeneratorRuntime().async(function requestPermissionsAsync$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:return _context2.abrupt(\"return\",ExponentAV.requestPermissionsAsync());case 1:case\"end\":return _context2.stop();}}},null,null,null,Promise);}export var usePermissions=createPermissionHook({getMethod:getPermissionsAsync,requestMethod:requestPermissionsAsync});export var Recording=function(){function Recording(){var _this=this;_classCallCheck(this,Recording);this._subscription=null;this._canRecord=false;this._isDoneRecording=false;this._finalDurationMillis=0;this._uri=null;this._onRecordingStatusUpdate=null;this._progressUpdateTimeoutVariable=null;this._progressUpdateIntervalMillis=_DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS;this._options=null;this._cleanupForUnloadedRecorder=function _callee(finalStatus){var _finalStatus$duration;return _regeneratorRuntime().async(function _callee$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_this._canRecord=false;_this._isDoneRecording=true;_this._finalDurationMillis=(_finalStatus$duration=finalStatus==null?void 0:finalStatus.durationMillis)!=null?_finalStatus$duration:0;_recorderExists=false;if(_this._subscription){_this._subscription.remove();_this._subscription=null;}_this._disablePolling();_context3.next=8;return _regeneratorRuntime().awrap(_this.getStatusAsync());case 8:return _context3.abrupt(\"return\",_context3.sent);case 9:case\"end\":return _context3.stop();}}},null,null,null,Promise);};this._pollingLoop=function _callee2(){return _regeneratorRuntime().async(function _callee2$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:if(!(isAudioEnabled()&&_this._canRecord&&_this._onRecordingStatusUpdate!=null)){_context4.next=10;break;}_this._progressUpdateTimeoutVariable=setTimeout(_this._pollingLoop,_this._progressUpdateIntervalMillis);_context4.prev=2;_context4.next=5;return _regeneratorRuntime().awrap(_this.getStatusAsync());case 5:_context4.next=10;break;case 7:_context4.prev=7;_context4.t0=_context4[\"catch\"](2);_this._disablePolling();case 10:case\"end\":return _context4.stop();}}},null,null,[[2,7]],Promise);};this.getStatusAsync=function _callee3(){var status;return _regeneratorRuntime().async(function _callee3$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:if(!_this._canRecord){_context5.next=2;break;}return _context5.abrupt(\"return\",_this._performOperationAndHandleStatusAsync(function(){return ExponentAV.getAudioRecordingStatus();}));case 2:status={canRecord:false,isRecording:false,isDoneRecording:_this._isDoneRecording,durationMillis:_this._finalDurationMillis};_this._callOnRecordingStatusUpdateForNewStatus(status);return _context5.abrupt(\"return\",status);case 5:case\"end\":return _context5.stop();}}},null,null,null,Promise);};}_createClass(Recording,[{key:\"_disablePolling\",value:function _disablePolling(){if(this._progressUpdateTimeoutVariable!=null){clearTimeout(this._progressUpdateTimeoutVariable);this._progressUpdateTimeoutVariable=null;}}},{key:\"_enablePollingIfNecessaryAndPossible\",value:function _enablePollingIfNecessaryAndPossible(){if(isAudioEnabled()&&this._canRecord&&this._onRecordingStatusUpdate!=null){this._disablePolling();this._pollingLoop();}}},{key:\"_callOnRecordingStatusUpdateForNewStatus\",value:function _callOnRecordingStatusUpdateForNewStatus(status){if(this._onRecordingStatusUpdate!=null){this._onRecordingStatusUpdate(status);}}},{key:\"_performOperationAndHandleStatusAsync\",value:function _performOperationAndHandleStatusAsync(operation){var status;return _regeneratorRuntime().async(function _performOperationAndHandleStatusAsync$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:throwIfAudioIsDisabled();if(!this._canRecord){_context6.next=9;break;}_context6.next=4;return _regeneratorRuntime().awrap(operation());case 4:status=_context6.sent;this._callOnRecordingStatusUpdateForNewStatus(status);return _context6.abrupt(\"return\",status);case 9:throw new Error('Cannot complete operation because this recorder is not ready to record.');case 10:case\"end\":return _context6.stop();}}},null,this,null,Promise);}},{key:\"setOnRecordingStatusUpdate\",value:function setOnRecordingStatusUpdate(onRecordingStatusUpdate){this._onRecordingStatusUpdate=onRecordingStatusUpdate;if(onRecordingStatusUpdate==null){this._disablePolling();}else{this._enablePollingIfNecessaryAndPossible();}this.getStatusAsync();}},{key:\"setProgressUpdateInterval\",value:function setProgressUpdateInterval(progressUpdateIntervalMillis){this._progressUpdateIntervalMillis=progressUpdateIntervalMillis;this.getStatusAsync();}},{key:\"prepareToRecordAsync\",value:function prepareToRecordAsync(){var options,extensionRegex,_await$ExponentAV$pre,uri,status,currentStatus,_args7=arguments;return _regeneratorRuntime().async(function prepareToRecordAsync$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:options=_args7.length>0&&_args7[0]!==undefined?_args7[0]:RECORDING_OPTIONS_PRESET_LOW_QUALITY;throwIfAudioIsDisabled();if(!_recorderExists){_context7.next=4;break;}throw new Error('Only one Recording object can be prepared at a given time.');case 4:if(!this._isDoneRecording){_context7.next=6;break;}throw new Error('This Recording object is done recording; you must make a new one.');case 6:if(!(!options||!options.android||!options.ios)){_context7.next=8;break;}throw new Error('You must provide recording options for android and ios in order to prepare to record.');case 8:extensionRegex=/^\\.\\w+$/;if(!(!options.android.extension||!options.ios.extension||!extensionRegex.test(options.android.extension)||!extensionRegex.test(options.ios.extension))){_context7.next=11;break;}throw new Error(\"Your file extensions must match \"+extensionRegex.toString()+\".\");case 11:if(this._canRecord){_context7.next=28;break;}if(eventEmitter){this._subscription=eventEmitter.addListener('Expo.Recording.recorderUnloaded',this._cleanupForUnloadedRecorder);}_context7.next=15;return _regeneratorRuntime().awrap(ExponentAV.prepareAudioRecorder(options));case 15:_await$ExponentAV$pre=_context7.sent;uri=_await$ExponentAV$pre.uri;status=_await$ExponentAV$pre.status;_recorderExists=true;this._uri=uri;this._options=options;this._canRecord=true;currentStatus=_objectSpread(_objectSpread({},status),{},{canRecord:true});this._callOnRecordingStatusUpdateForNewStatus(currentStatus);this._enablePollingIfNecessaryAndPossible();return _context7.abrupt(\"return\",currentStatus);case 28:throw new Error('This Recording object is already prepared to record.');case 29:case\"end\":return _context7.stop();}}},null,this,null,Promise);}},{key:\"getAvailableInputs\",value:function getAvailableInputs(){return _regeneratorRuntime().async(function getAvailableInputs$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:return _context8.abrupt(\"return\",ExponentAV.getAvailableInputs());case 1:case\"end\":return _context8.stop();}}},null,null,null,Promise);}},{key:\"getCurrentInput\",value:function getCurrentInput(){return _regeneratorRuntime().async(function getCurrentInput$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:return _context9.abrupt(\"return\",ExponentAV.getCurrentInput());case 1:case\"end\":return _context9.stop();}}},null,null,null,Promise);}},{key:\"setInput\",value:function setInput(inputUid){return _regeneratorRuntime().async(function setInput$(_context0){while(1){switch(_context0.prev=_context0.next){case 0:return _context0.abrupt(\"return\",ExponentAV.setInput(inputUid));case 1:case\"end\":return _context0.stop();}}},null,null,null,Promise);}},{key:\"startAsync\",value:function startAsync(){return _regeneratorRuntime().async(function startAsync$(_context1){while(1){switch(_context1.prev=_context1.next){case 0:return _context1.abrupt(\"return\",this._performOperationAndHandleStatusAsync(function(){return ExponentAV.startAudioRecording();}));case 1:case\"end\":return _context1.stop();}}},null,this,null,Promise);}},{key:\"pauseAsync\",value:function pauseAsync(){return _regeneratorRuntime().async(function pauseAsync$(_context10){while(1){switch(_context10.prev=_context10.next){case 0:return _context10.abrupt(\"return\",this._performOperationAndHandleStatusAsync(function(){return ExponentAV.pauseAudioRecording();}));case 1:case\"end\":return _context10.stop();}}},null,this,null,Promise);}},{key:\"stopAndUnloadAsync\",value:function stopAndUnloadAsync(){var _stopResult;var stopResult,stopError,status;return _regeneratorRuntime().async(function stopAndUnloadAsync$(_context11){while(1){switch(_context11.prev=_context11.next){case 0:if(this._canRecord){_context11.next=6;break;}if(!this._isDoneRecording){_context11.next=5;break;}throw new Error('Cannot unload a Recording that has already been unloaded.');case 5:throw new Error('Cannot unload a Recording that has not been prepared.');case 6:_context11.prev=6;_context11.next=9;return _regeneratorRuntime().awrap(ExponentAV.stopAudioRecording());case 9:stopResult=_context11.sent;_context11.next=15;break;case 12:_context11.prev=12;_context11.t0=_context11[\"catch\"](6);stopError=_context11.t0;case 15:if(Platform.OS==='web'&&((_stopResult=stopResult)==null?void 0:_stopResult.uri)!==undefined){this._uri=stopResult.uri;}_context11.next=18;return _regeneratorRuntime().awrap(ExponentAV.unloadAudioRecorder());case 18:_context11.next=20;return _regeneratorRuntime().awrap(this._cleanupForUnloadedRecorder(stopResult));case 20:status=_context11.sent;return _context11.abrupt(\"return\",stopError?Promise.reject(stopError):status);case 22:case\"end\":return _context11.stop();}}},null,this,[[6,12]],Promise);}},{key:\"getURI\",value:function getURI(){return this._uri;}},{key:\"createNewLoadedSound\",value:function createNewLoadedSound(){var initialStatus,onPlaybackStatusUpdate,_args12=arguments;return _regeneratorRuntime().async(function createNewLoadedSound$(_context12){while(1){switch(_context12.prev=_context12.next){case 0:initialStatus=_args12.length>0&&_args12[0]!==undefined?_args12[0]:{};onPlaybackStatusUpdate=_args12.length>1&&_args12[1]!==undefined?_args12[1]:null;console.warn(\"createNewLoadedSound is deprecated in favor of createNewLoadedSoundAsync, which has the same API aside from the method name\");return _context12.abrupt(\"return\",this.createNewLoadedSoundAsync(initialStatus,onPlaybackStatusUpdate));case 4:case\"end\":return _context12.stop();}}},null,this,null,Promise);}},{key:\"createNewLoadedSoundAsync\",value:function createNewLoadedSoundAsync(){var initialStatus,onPlaybackStatusUpdate,_args13=arguments;return _regeneratorRuntime().async(function createNewLoadedSoundAsync$(_context13){while(1){switch(_context13.prev=_context13.next){case 0:initialStatus=_args13.length>0&&_args13[0]!==undefined?_args13[0]:{};onPlaybackStatusUpdate=_args13.length>1&&_args13[1]!==undefined?_args13[1]:null;if(!(this._uri==null||!this._isDoneRecording)){_context13.next=4;break;}throw new Error('Cannot create sound when the Recording has not finished!');case 4:return _context13.abrupt(\"return\",Sound.createAsync({uri:this._uri},initialStatus,onPlaybackStatusUpdate,false));case 5:case\"end\":return _context13.stop();}}},null,this,null,Promise);}}]);return Recording;}();Recording.createAsync=function _callee4(){var options,onRecordingStatusUpdate,progressUpdateIntervalMillis,recording,status,_args14=arguments;return _regeneratorRuntime().async(function _callee4$(_context14){while(1){switch(_context14.prev=_context14.next){case 0:options=_args14.length>0&&_args14[0]!==undefined?_args14[0]:RECORDING_OPTIONS_PRESET_LOW_QUALITY;onRecordingStatusUpdate=_args14.length>1&&_args14[1]!==undefined?_args14[1]:null;progressUpdateIntervalMillis=_args14.length>2&&_args14[2]!==undefined?_args14[2]:null;recording=new Recording();if(progressUpdateIntervalMillis){recording._progressUpdateIntervalMillis=progressUpdateIntervalMillis;}recording.setOnRecordingStatusUpdate(onRecordingStatusUpdate);_context14.next=8;return _regeneratorRuntime().awrap(recording.prepareToRecordAsync(_objectSpread(_objectSpread({},options),{},{keepAudioActiveHint:true})));case 8:_context14.prev=8;_context14.next=11;return _regeneratorRuntime().awrap(recording.startAsync());case 11:status=_context14.sent;return _context14.abrupt(\"return\",{recording:recording,status:status});case 15:_context14.prev=15;_context14.t0=_context14[\"catch\"](8);recording.stopAndUnloadAsync();throw _context14.t0;case 19:case\"end\":return _context14.stop();}}},null,null,[[8,15]],Promise);};export*from\"./RecordingConstants\";export{PermissionStatus};","map":{"version":3,"names":["PermissionStatus","createPermissionHook","EventEmitter","Platform","_DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS","ExponentAV","isAudioEnabled","throwIfAudioIsDisabled","RECORDING_OPTIONS_PRESET_LOW_QUALITY","Sound","_recorderExists","eventEmitter","OS","getPermissionsAsync","_regeneratorRuntime","async","getPermissionsAsync$","_context","prev","next","abrupt","stop","Promise","requestPermissionsAsync","requestPermissionsAsync$","_context2","usePermissions","getMethod","requestMethod","Recording","_this","_classCallCheck","_subscription","_canRecord","_isDoneRecording","_finalDurationMillis","_uri","_onRecordingStatusUpdate","_progressUpdateTimeoutVariable","_progressUpdateIntervalMillis","_options","_cleanupForUnloadedRecorder","_callee","finalStatus","_finalStatus$duration","_callee$","_context3","durationMillis","remove","_disablePolling","awrap","getStatusAsync","sent","_pollingLoop","_callee2","_callee2$","_context4","setTimeout","t0","_callee3","status","_callee3$","_context5","_performOperationAndHandleStatusAsync","getAudioRecordingStatus","canRecord","isRecording","isDoneRecording","_callOnRecordingStatusUpdateForNewStatus","_createClass","key","value","clearTimeout","_enablePollingIfNecessaryAndPossible","operation","_performOperationAndHandleStatusAsync$","_context6","Error","setOnRecordingStatusUpdate","onRecordingStatusUpdate","setProgressUpdateInterval","progressUpdateIntervalMillis","prepareToRecordAsync","options","extensionRegex","_await$ExponentAV$pre","uri","currentStatus","_args7","arguments","prepareToRecordAsync$","_context7","length","undefined","android","ios","extension","test","toString","addListener","prepareAudioRecorder","_objectSpread","getAvailableInputs","getAvailableInputs$","_context8","getCurrentInput","getCurrentInput$","_context9","setInput","inputUid","setInput$","_context0","startAsync","startAsync$","_context1","startAudioRecording","pauseAsync","pauseAsync$","_context10","pauseAudioRecording","stopAndUnloadAsync","_stopResult","stopResult","stopError","stopAndUnloadAsync$","_context11","stopAudioRecording","unloadAudioRecorder","reject","getURI","createNewLoadedSound","initialStatus","onPlaybackStatusUpdate","_args12","createNewLoadedSound$","_context12","console","warn","createNewLoadedSoundAsync","_args13","createNewLoadedSoundAsync$","_context13","createAsync","_callee4","recording","_args14","_callee4$","_context14","keepAudioActiveHint"],"sources":["E:\\Projects\\IN_BUILD\\TicTacToe\\node_modules\\expo-av\\src\\Audio\\Recording.ts"],"sourcesContent":["import {\n  PermissionResponse,\n  PermissionStatus,\n  PermissionHookOptions,\n  createPermissionHook,\n  EventEmitter,\n  Subscription,\n  Platform,\n} from 'expo-modules-core';\n\nimport {\n  _DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS,\n  AVPlaybackStatus,\n  AVPlaybackStatusToSet,\n} from '../AV';\nimport ExponentAV from '../ExponentAV';\nimport { isAudioEnabled, throwIfAudioIsDisabled } from './AudioAvailability';\nimport { RecordingInput, RecordingOptions, RecordingStatus } from './Recording.types';\nimport { RECORDING_OPTIONS_PRESET_LOW_QUALITY } from './RecordingConstants';\nimport { Sound } from './Sound';\n\nlet _recorderExists: boolean = false;\nconst eventEmitter = Platform.OS === 'android' ? new EventEmitter(ExponentAV) : null;\n\nexport async function getPermissionsAsync(): Promise<PermissionResponse> {\n  return ExponentAV.getPermissionsAsync();\n}\n\nexport async function requestPermissionsAsync(): Promise<PermissionResponse> {\n  return ExponentAV.requestPermissionsAsync();\n}\n\n/**\n * Check or request permissions to record audio.\n * This uses both `requestPermissionAsync` and `getPermissionsAsync` to interact with the permissions.\n *\n * @example\n * ```ts\n * const [status, requestPermission] = Audio.usePermissions();\n * ```\n */\nexport const usePermissions = createPermissionHook({\n  getMethod: getPermissionsAsync,\n  requestMethod: requestPermissionsAsync,\n});\n\nexport class Recording {\n  _subscription: Subscription | null = null;\n  _canRecord: boolean = false;\n  _isDoneRecording: boolean = false;\n  _finalDurationMillis: number = 0;\n  _uri: string | null = null;\n  _onRecordingStatusUpdate: ((status: RecordingStatus) => void) | null = null;\n  _progressUpdateTimeoutVariable: number | null = null;\n  _progressUpdateIntervalMillis: number = _DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS;\n  _options: RecordingOptions | null = null;\n\n  // Internal methods\n\n  _cleanupForUnloadedRecorder = async (finalStatus?: RecordingStatus) => {\n    this._canRecord = false;\n    this._isDoneRecording = true;\n    this._finalDurationMillis = finalStatus?.durationMillis ?? 0;\n    _recorderExists = false;\n    if (this._subscription) {\n      this._subscription.remove();\n      this._subscription = null;\n    }\n    this._disablePolling();\n    return await this.getStatusAsync(); // Automatically calls onRecordingStatusUpdate for the final state.\n  };\n\n  _pollingLoop = async () => {\n    if (isAudioEnabled() && this._canRecord && this._onRecordingStatusUpdate != null) {\n      this._progressUpdateTimeoutVariable = setTimeout(\n        this._pollingLoop,\n        this._progressUpdateIntervalMillis\n      ) as any;\n      try {\n        await this.getStatusAsync();\n      } catch {\n        this._disablePolling();\n      }\n    }\n  };\n\n  _disablePolling() {\n    if (this._progressUpdateTimeoutVariable != null) {\n      clearTimeout(this._progressUpdateTimeoutVariable);\n      this._progressUpdateTimeoutVariable = null;\n    }\n  }\n\n  _enablePollingIfNecessaryAndPossible() {\n    if (isAudioEnabled() && this._canRecord && this._onRecordingStatusUpdate != null) {\n      this._disablePolling();\n      this._pollingLoop();\n    }\n  }\n\n  _callOnRecordingStatusUpdateForNewStatus(status: RecordingStatus) {\n    if (this._onRecordingStatusUpdate != null) {\n      this._onRecordingStatusUpdate(status);\n    }\n  }\n\n  async _performOperationAndHandleStatusAsync(\n    operation: () => Promise<RecordingStatus>\n  ): Promise<RecordingStatus> {\n    throwIfAudioIsDisabled();\n    if (this._canRecord) {\n      const status = await operation();\n      this._callOnRecordingStatusUpdateForNewStatus(status);\n      return status;\n    } else {\n      throw new Error('Cannot complete operation because this recorder is not ready to record.');\n    }\n  }\n\n  // Note that all calls automatically call onRecordingStatusUpdate as a side effect.\n\n  static createAsync = async (\n    options: RecordingOptions = RECORDING_OPTIONS_PRESET_LOW_QUALITY,\n    onRecordingStatusUpdate: ((status: RecordingStatus) => void) | null = null,\n    progressUpdateIntervalMillis: number | null = null\n  ): Promise<{ recording: Recording; status: RecordingStatus }> => {\n    const recording: Recording = new Recording();\n    if (progressUpdateIntervalMillis) {\n      recording._progressUpdateIntervalMillis = progressUpdateIntervalMillis;\n    }\n    recording.setOnRecordingStatusUpdate(onRecordingStatusUpdate);\n    await recording.prepareToRecordAsync({\n      ...options,\n      keepAudioActiveHint: true,\n    });\n    try {\n      const status = await recording.startAsync();\n      return { recording, status };\n    } catch (err) {\n      recording.stopAndUnloadAsync();\n      throw err;\n    }\n  };\n\n  // Get status API\n\n  getStatusAsync = async (): Promise<RecordingStatus> => {\n    // Automatically calls onRecordingStatusUpdate.\n    if (this._canRecord) {\n      return this._performOperationAndHandleStatusAsync(() => ExponentAV.getAudioRecordingStatus());\n    }\n    const status = {\n      canRecord: false,\n      isRecording: false,\n      isDoneRecording: this._isDoneRecording,\n      durationMillis: this._finalDurationMillis,\n    };\n    this._callOnRecordingStatusUpdateForNewStatus(status);\n    return status;\n  };\n\n  setOnRecordingStatusUpdate(onRecordingStatusUpdate: ((status: RecordingStatus) => void) | null) {\n    this._onRecordingStatusUpdate = onRecordingStatusUpdate;\n    if (onRecordingStatusUpdate == null) {\n      this._disablePolling();\n    } else {\n      this._enablePollingIfNecessaryAndPossible();\n    }\n    this.getStatusAsync();\n  }\n\n  setProgressUpdateInterval(progressUpdateIntervalMillis: number) {\n    this._progressUpdateIntervalMillis = progressUpdateIntervalMillis;\n    this.getStatusAsync();\n  }\n\n  // Record API\n\n  async prepareToRecordAsync(\n    options: RecordingOptions = RECORDING_OPTIONS_PRESET_LOW_QUALITY\n  ): Promise<RecordingStatus> {\n    throwIfAudioIsDisabled();\n\n    if (_recorderExists) {\n      throw new Error('Only one Recording object can be prepared at a given time.');\n    }\n\n    if (this._isDoneRecording) {\n      throw new Error('This Recording object is done recording; you must make a new one.');\n    }\n\n    if (!options || !options.android || !options.ios) {\n      throw new Error(\n        'You must provide recording options for android and ios in order to prepare to record.'\n      );\n    }\n\n    const extensionRegex = /^\\.\\w+$/;\n    if (\n      !options.android.extension ||\n      !options.ios.extension ||\n      !extensionRegex.test(options.android.extension) ||\n      !extensionRegex.test(options.ios.extension)\n    ) {\n      throw new Error(`Your file extensions must match ${extensionRegex.toString()}.`);\n    }\n\n    if (!this._canRecord) {\n      if (eventEmitter) {\n        this._subscription = eventEmitter.addListener(\n          'Expo.Recording.recorderUnloaded',\n          this._cleanupForUnloadedRecorder\n        );\n      }\n\n      const {\n        uri,\n        status,\n      }: {\n        uri: string | null;\n        // status is of type RecordingStatus, but without the canRecord field populated\n        status: Pick<RecordingStatus, Exclude<keyof RecordingStatus, 'canRecord'>>;\n      } = await ExponentAV.prepareAudioRecorder(options);\n      _recorderExists = true;\n      this._uri = uri;\n      this._options = options;\n      this._canRecord = true;\n\n      const currentStatus = { ...status, canRecord: true };\n      this._callOnRecordingStatusUpdateForNewStatus(currentStatus);\n      this._enablePollingIfNecessaryAndPossible();\n      return currentStatus;\n    } else {\n      throw new Error('This Recording object is already prepared to record.');\n    }\n  }\n\n  async getAvailableInputs(): Promise<RecordingInput[]> {\n    return ExponentAV.getAvailableInputs();\n  }\n\n  async getCurrentInput(): Promise<RecordingInput> {\n    return ExponentAV.getCurrentInput();\n  }\n\n  async setInput(inputUid: string): Promise<void> {\n    return ExponentAV.setInput(inputUid);\n  }\n\n  async startAsync(): Promise<RecordingStatus> {\n    return this._performOperationAndHandleStatusAsync(() => ExponentAV.startAudioRecording());\n  }\n\n  async pauseAsync(): Promise<RecordingStatus> {\n    return this._performOperationAndHandleStatusAsync(() => ExponentAV.pauseAudioRecording());\n  }\n\n  async stopAndUnloadAsync(): Promise<RecordingStatus> {\n    if (!this._canRecord) {\n      if (this._isDoneRecording) {\n        throw new Error('Cannot unload a Recording that has already been unloaded.');\n      } else {\n        throw new Error('Cannot unload a Recording that has not been prepared.');\n      }\n    }\n    // We perform a separate native API call so that the state of the Recording can be updated with\n    // the final duration of the recording. (We cast stopStatus as Object to appease Flow)\n    let stopResult: RecordingStatus | undefined;\n    let stopError: Error | undefined;\n    try {\n      stopResult = await ExponentAV.stopAudioRecording();\n    } catch (err) {\n      stopError = err;\n    }\n\n    // Web has to return the URI at the end of recording, so needs a little destructuring\n    if (Platform.OS === 'web' && stopResult?.uri !== undefined) {\n      this._uri = stopResult.uri;\n    }\n\n    // Clean-up and return status\n    await ExponentAV.unloadAudioRecorder();\n    const status = await this._cleanupForUnloadedRecorder(stopResult);\n    return stopError ? Promise.reject(stopError) : status;\n  }\n\n  // Read API\n\n  getURI(): string | null {\n    return this._uri;\n  }\n\n  /** @deprecated Use `createNewLoadedSoundAsync()` instead */\n  async createNewLoadedSound(\n    initialStatus: AVPlaybackStatusToSet = {},\n    onPlaybackStatusUpdate: ((status: AVPlaybackStatus) => void) | null = null\n  ): Promise<{ sound: Sound; status: AVPlaybackStatus }> {\n    console.warn(\n      `createNewLoadedSound is deprecated in favor of createNewLoadedSoundAsync, which has the same API aside from the method name`\n    );\n    return this.createNewLoadedSoundAsync(initialStatus, onPlaybackStatusUpdate);\n  }\n\n  async createNewLoadedSoundAsync(\n    initialStatus: AVPlaybackStatusToSet = {},\n    onPlaybackStatusUpdate: ((status: AVPlaybackStatus) => void) | null = null\n  ): Promise<{ sound: Sound; status: AVPlaybackStatus }> {\n    if (this._uri == null || !this._isDoneRecording) {\n      throw new Error('Cannot create sound when the Recording has not finished!');\n    }\n    return Sound.createAsync(\n      // $FlowFixMe: Flow can't distinguish between this literal and Asset\n      { uri: this._uri },\n      initialStatus,\n      onPlaybackStatusUpdate,\n      false\n    );\n  }\n}\n\nexport * from './RecordingConstants';\n\nexport {\n  PermissionResponse,\n  PermissionStatus,\n  PermissionHookOptions,\n  RecordingOptions,\n  RecordingStatus,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}